// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#include <iostream>
#include <vector>
int fibonacci(int num){
    
    return num;
}
int main ()
{
    std::vector<int> fibTerms;
    int penUltTerm = 1;
    int lastTerm = 2;
    int limit = 4000000;
    int newTerm = 0;
    fibTerms.push_back(penUltTerm);
    fibTerms.push_back(lastTerm);
    // generate fibonnacci terms < 4 million
    while (true) {
        newTerm = fibTerms.end()[-2] + fibTerms.end()[-1];
        if (newTerm > limit) {
            break;
        }
        fibTerms.push_back(newTerm);
    }
    
    // print sum of all even terms in the fibonnacci sequence up to terms < 40000000
    int finalSum = 0;
    for (int i = 0; i < fibTerms.size(); i++) {
        if (fibTerms[i] % 2 == 0) {
           finalSum += fibTerms[i]; 
        }
    }
    std::cout << finalSum << std::endl;
    return 0;
}

